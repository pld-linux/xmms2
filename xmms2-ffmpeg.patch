--- xmms2-0.2DrEvil/src/plugins/wma/wma.c.orig	2006-07-06 22:35:55.000000000 +0200
+++ xmms2-0.2DrEvil/src/plugins/wma/wma.c	2023-05-13 14:06:54.268936218 +0200
@@ -24,7 +24,7 @@
 #include <string.h>
 #include <glib.h>
 
-#include "avformat.h"
+#include <libavformat/avformat.h>
 
 #define WMA_BUFFER_SIZE 4096
 
@@ -33,7 +33,7 @@ typedef struct {
 
 	AVFormatContext *fmtctx;
 	AVCodecContext *codecctx;
-	offset_t offset;
+	int64_t offset;
 
 	guchar buffer[WMA_BUFFER_SIZE];
 	guint buffer_size;
@@ -75,7 +75,7 @@ static void xmms_wma_get_mediainfo (xmms
 
 int xmms_wma_read_callback (void *user_data, uint8_t *buffer,
                             int length);
-offset_t xmms_wma_seek_callback (void *user_data, offset_t offset, int whence);
+int64_t xmms_wma_seek_callback (void *user_data, int64_t offset, int whence);
 int xmms_wma_get_track (AVFormatContext *fmtctx);
 
 /*
@@ -121,7 +121,7 @@ xmms_wma_destroy (xmms_xform_t *xform)
 	g_return_if_fail (data);
 
 	avcodec_close (data->codecctx);
-	av_close_input_file (data->fmtctx);
+	avformat_close_input (&data->fmtctx);
 
 	g_string_free (data->outbuf, TRUE);
 	g_free (data);
@@ -134,7 +134,7 @@ xmms_wma_init (xmms_xform_t *xform)
 	gint temp;
 	AVInputFormat *format;
 	AVCodec *codec;
-	ByteIOContext byteio;
+	AVIOContext *byteio;
 
 	g_return_val_if_fail (xform, FALSE);
 
@@ -155,13 +155,18 @@ xmms_wma_init (xmms_xform_t *xform)
 		goto err;
 	}
 	format->flags |= AVFMT_NOFILE;
-	if ((temp = init_put_byte (&byteio, data->buffer, data->buffer_size, 0,
+	if ((byteio = avio_alloc_context (data->buffer, data->buffer_size, 0,
 	                           xform, xmms_wma_read_callback, NULL,
-	                           xmms_wma_seek_callback)) < 0) {
-		XMMS_DBG ("Could not initialize ByteIOContext structure: %d", temp);
+	                           xmms_wma_seek_callback)) == NULL) {
+		XMMS_DBG ("Could not initialize AVIOContext structure");
 		goto err;
 	}
-	if ((temp = av_open_input_stream (&data->fmtctx, &byteio, "", format,
+	if ((data->fmtctx = afformat_alloc_context()) == NULL) {
+		XMMS_DBG ("Could not initialize AVFormatContext structure");
+		goto err;
+	}
+	data->fmtctx->pb = byteio;
+	if ((temp = avformat_open_input (&data->fmtctx, "", format,
 	                                  NULL)) < 0) {
 		XMMS_DBG ("Could not open input stream for ASF format: %d", temp);
 		goto err;
@@ -182,7 +187,7 @@ xmms_wma_init (xmms_xform_t *xform)
 	data->samplerate = data->codecctx->sample_rate;
 	data->channels = data->codecctx->channels;
 
-	if ((temp = avcodec_open (data->codecctx, codec)) < 0) {
+	if ((temp = avcodec_open2 (data->codecctx, codec, NULL)) < 0) {
 		XMMS_DBG ("Opening WMA decoder failed");
 		goto err;
 	}
@@ -209,7 +214,7 @@ err:
 		avcodec_close (data->codecctx);
 	}
 	if (data->fmtctx) {
-		av_close_input_file (data->fmtctx);
+		avformat_close_input (&data->fmtctx);
 	}
 	g_string_free (data->outbuf, TRUE);
 	g_free (data);
@@ -223,9 +228,7 @@ xmms_wma_read (xmms_xform_t *xform, xmms
 {
 	xmms_wma_data_t *data;
 	AVPacket pkt;
-	unsigned char *inbuf;
-	char outbuf[AVCODEC_MAX_AUDIO_FRAME_SIZE];
-	int inbufsize, outbufsize, size;
+	int size;
 
 	data = xmms_xform_private_data_get (xform);
 	g_return_val_if_fail (data, -1);
@@ -237,26 +240,33 @@ xmms_wma_read (xmms_xform_t *xform, xmms
 		if (pkt.size == 0)
 			return 0;
 
-		inbuf = pkt.data;
-		inbufsize = pkt.size;
-
-		while (inbufsize > 0) {
+		while (pkt.size > 0) {
 			int inlen;
-			
-			inlen = avcodec_decode_audio(data->codecctx, (short *) outbuf,
-			                             &outbufsize, inbuf, inbufsize);
+			int got_frame = 0;
+			AVFrame *frame = av_frame_alloc();
+			gsize outbufsize;
+
+			if (frame == NULL)
+				return -1;
+			inlen = avcodec_decode_audio4(data->codecctx, frame, &got_frame, &pkt);
 			data->codecctx->frame_number++;
 
-			if (inlen < 0)
+			if (inlen < 0) {
+				av_frame_free(&frame);
 				return -1;
+			}
 			
-			if (outbufsize <= 0)
+			if (!got_frame) {
+				av_frame_free(&frame);
 				continue;
+			}
+			outbufsize = av_samples_get_buffer_size(NULL, data->codecctx->channels, frame->nb_samples, data->codecctx->sample_fmt, 1);
 
-			g_string_append_len (data->outbuf, outbuf, outbufsize);
+			g_string_append_len (data->outbuf, frame->data[0], outbufsize);
+			av_frame_free(&frame);
 
-			inbuf += inlen;
-			inbufsize -= inlen;
+			pkt.data += inlen;
+			pkt.size -= inlen;
 		}
 
 		if (pkt.data) {
@@ -505,8 +515,8 @@ xmms_wma_read_callback (void *user_data,
 	return ret;
 }
 
-offset_t
-xmms_wma_seek_callback (void *user_data, offset_t offset, int whence)
+int64_t
+xmms_wma_seek_callback (void *user_data, int64_t offset, int whence)
 {
 	xmms_xform_t *xform;
 	xmms_wma_data_t *data;
@@ -556,7 +566,7 @@ xmms_wma_get_track (AVFormatContext *fmt
 	for (wma_idx = 0; wma_idx < fmtctx->nb_streams; wma_idx++) {
 		codec = fmtctx->streams[wma_idx]->codec;
 
-		if (codec->codec_type == CODEC_TYPE_AUDIO) {
+		if (codec->codec_type == AVMEDIA_TYPE_AUDIO) {
 			break;
 		}
 	}
