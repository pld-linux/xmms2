--- xmms2-0.2DrDolittle/src/clients/lib/ruby/Library.orig	2023-05-10 22:10:51.425835301 +0200
+++ xmms2-0.2DrDolittle/src/clients/lib/ruby/Library	2023-05-10 22:34:00.468310213 +0200
@@ -17,16 +17,16 @@ def config(env):
 
 		print(version)
 
-		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
+		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(RbConfig::CONFIG[\"rubyhdrdir\"] + \"/ruby.h\")'").strip()
 		if got_ruby_h != "true" :
 			raise ConfigError("bad")
 
-		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
+		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(RbConfig::CONFIG[\"rubyhdrdir\"], 0..1)'"
 		env.configcmd(cmd)
 		if "RUBYARCHDIR" in env:
 			env.librarypath = env["RUBYARCHDIR"]
 		else:
-			cmd = "ruby -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
+			cmd = "ruby -rrbconfig -e 'print RbConfig::CONFIG[\"vendorarchdir\"]'"
 			env.librarypath = os.popen(cmd).read().strip()
 
 		env.Prepend(LIBPATH="src/clients/lib/xmmsclient")
--- xmms2-0.2DrDolittle/src/clients/lib/ruby/Library.ecore.orig	2023-05-10 22:10:51.429168616 +0200
+++ xmms2-0.2DrDolittle/src/clients/lib/ruby/Library.ecore	2023-05-10 22:34:47.804720436 +0200
@@ -23,16 +23,16 @@ def config(env):
 
 		print(version)
 
-		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
+		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(RbConfig::CONFIG[\"rubyhdrdir\"] + \"/ruby.h\")'").strip()
 		if got_ruby_h != "true" :
 			raise ConfigError("")
 
-		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
+		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(RbConfig::CONFIG[\"rubyhdrdir\"], 0..1)'"
 		env.configcmd(cmd)
 		if "RUBYARCHDIR" in env:
 			env.librarypath = env["RUBYARCHDIR"]
 		else:
-			cmd = "ruby -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
+			cmd = "ruby -rrbconfig -e 'print RbConfig::CONFIG[\"vendorarchdir\"]'"
 			env.librarypath = os.popen(cmd).read().strip()
 
 		env.Prepend(LIBPATH="src/clients/lib/xmmsclient")
--- xmms2-0.2DrDolittle/src/clients/lib/ruby/Library.glib.orig	2023-05-10 22:10:51.429168616 +0200
+++ xmms2-0.2DrDolittle/src/clients/lib/ruby/Library.glib	2023-05-10 22:35:11.117927471 +0200
@@ -17,16 +17,16 @@ def config(env):
 
 		print(version)
 
-		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(Config::CONFIG[\"archdir\"] + \"/ruby.h\")'").strip()
+		got_ruby_h = env.run("ruby -rrbconfig -e 'puts File.exist?(RbConfig::CONFIG[\"rubyhdrdir\"] + \"/ruby.h\")'").strip()
 		if got_ruby_h != "true" :
 			raise ConfigError("bad")
 
-		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(Config::CONFIG[\"archdir\"], 0..1)'"
+		cmd = "ruby -rrbconfig -e 'puts \"-I%s -L%s\" % [].fill(RbConfig::CONFIG[\"rubyhdrdir\"], 0..1)'"
 		env.configcmd(cmd)
 		if "RUBYARCHDIR" in env:
 			env.librarypath = env["RUBYARCHDIR"]
 		else:
-			cmd = "ruby -rrbconfig -e 'print Config::CONFIG[\"sitearchdir\"]'"
+			cmd = "ruby -rrbconfig -e 'print RbConfig::CONFIG[\"vendorarchdir\"]'"
 			env.librarypath = os.popen(cmd).read().strip()
 
 		env.pkgconfig("glib-2.0")
--- xmms2-0.2DrGonzo/src/clients/lib/ruby/rb_xmmsclient.c.orig	2006-09-26 15:50:20.000000000 +0200
+++ xmms2-0.2DrGonzo/src/clients/lib/ruby/rb_xmmsclient.c	2023-05-13 20:16:33.032116884 +0200
@@ -78,8 +78,8 @@
 	StringValue (arg1); \
 \
 	res = xmmsc_##name (xmms->real, \
-	                    (unsigned char *) RSTRING (arg1)->ptr, \
-	                    RSTRING (arg1)->len); \
+	                    (unsigned char *) RSTRING_PTR (arg1), \
+	                    RSTRING_LEN (arg1)); \
 	METHOD_HANDLER_FOOTER
 
 static VALUE eClientError, eDisconnectedError;
@@ -784,7 +784,7 @@ c_playlist_add (VALUE self, VALUE arg)
 
 	if (!NIL_P (rb_check_string_type (arg)))
 		is_str = true;
-	else if (!rb_obj_is_kind_of (arg, rb_cFixnum)) {
+	else if (!rb_obj_is_kind_of (arg, rb_cInteger)) {
 		rb_raise (eClientError, "unsupported argument");
 		return Qnil;
 	}
@@ -817,7 +817,7 @@ c_playlist_insert (VALUE self, VALUE pos
 
 	if (!NIL_P (rb_check_string_type (arg)))
 		is_str = true;
-	else if (!rb_obj_is_kind_of (arg, rb_cFixnum)) {
+	else if (!rb_obj_is_kind_of (arg, rb_cInteger)) {
 		rb_raise (eClientError, "unsupported argument");
 		return Qnil;
 	}
@@ -999,7 +999,7 @@ c_medialib_entry_property_set (int argc,
 
 	if (!NIL_P (rb_check_string_type (value)))
 		is_str = true;
-	else if (!rb_obj_is_kind_of (value, rb_cFixnum)) {
+	else if (!rb_obj_is_kind_of (value, rb_cInteger)) {
 		rb_raise (eClientError, "unsupported argument");
 		return Qnil;
 	}
--- xmms2-0.2DrGonzo/src/clients/lib/ruby/rb_result.c.orig	2006-09-26 15:50:20.000000000 +0200
+++ xmms2-0.2DrGonzo/src/clients/lib/ruby/rb_result.c	2023-05-13 18:40:37.719962752 +0200
@@ -417,6 +417,7 @@ c_propdict_init (VALUE self, VALUE resul
 	return self;
 }
 
+#ifdef HAVE_RB_PROTECT_INSPECT
 static VALUE
 propdict_inspect_cb (VALUE args, VALUE s)
 {
@@ -459,6 +460,7 @@ c_propdict_inspect (VALUE self)
 {
 	return rb_protect_inspect (propdict_inspect, self, 0);
 }
+#endif
 
 static VALUE
 c_propdict_aref (VALUE self, VALUE key)
@@ -629,7 +631,9 @@ Init_Result (VALUE mXmms)
 	cPropDict = rb_define_class_under (mXmms, "PropDict", rb_cObject);
 
 	rb_define_method (cPropDict, "initialize", c_propdict_init, 1);
+#ifdef HAVE_RB_PROTECT_INSPECT
 	rb_define_method (cPropDict, "inspect", c_propdict_inspect, 0);
+#endif
 
 	rb_define_method (cPropDict, "[]", c_propdict_aref, 1);
 	rb_define_method (cPropDict, "has_key?", c_propdict_has_key, 1);
